#!/usr/bin/env bash
set -e
ulimit -t 1200

function checkFailedBuild {
  if [[ $? != 0 ]]; then
    echo "Build failed"
    exit 1
  fi
}

trap checkFailedBuild Exit

export BUNDLE_GEMFILE="$(pwd)/Gemfile"
bundle update

NUMBER_OF_RUNS=3
RESULTS="$(pwd)/results.csv"
if [[ ! -s $RESULTS ]]; then
	echo "Jekyll version, user time in seconds, site" > $RESULTS
fi

if [[ -n $REF ]]; then
	VERSION=$REF
elif [[ -n $PR ]]; then
	VERSION="#$PR"
else
	VERSION="master"
fi

if command -v gtime; then
	TIME=$(which gtime)
else
	TIME=$(which time)
fi

if command -v md5; then
	MD5=$(which md5)
else
	MD5=$(which md5sum)
fi

# Create tmp/ directory
TMPDIR="$(pwd)/sites"
if [[ -d $TMPDIR ]]; then
	rm -rf "$TMPDIR"
fi
mkdir -p "$TMPDIR/source"
mkdir -p "$TMPDIR/destination"

# Flush SASS cache
if [[ -d "$(pwd)/.sass-cache" ]]; then
	rm -rf "$(pwd)/.sass-cache"
fi

for SITE in $(cat "site-list"); do
	echo ""
	echo "Sampling $SITE"
	echo "id: $MD5"
	SOURCE="$TMPDIR/source/$($MD5 <<< $SITE)"
	DESTINATION=${SOURCE/source/destination}
	if [[ ! -d $SOURCE ]]; then
		git clone --recurse-submodules -q "$SITE" "$SOURCE"
	fi
	for ((i=0; i<NUMBER_OF_RUNS; ++i)); do
		"$TIME" -ao "$RESULTS" -f"$VERSION,%U,$SITE" \
			bundle exec jekyll build -s "$SOURCE" -d "$DESTINATION" --trace
	done
done
